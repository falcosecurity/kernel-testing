name: Test drivers against a matrix of kernels/distros

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *' # every day at 8am
    
# Checks if any concurrent jobs under the same pull request or branch are being executed
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test-kernels:
    name: build-latest-kernel
    strategy:
      fail-fast: false
      matrix:
        architecture: [X64, ARM64]
    runs-on: [ "self-hosted", "linux", "${{matrix.architecture}}" ]    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Run kernels tests
        run: |
          ansible-playbook main-playbook.yml --extra-vars "run_id=id-${{ github.run_id }} output_dir=~/ansible_output_${{ github.run_id }}" || :
          
      - name: Tar output files
        run: |
          tar -cvf ansible_output.tar ~/ansible_output_${{ github.run_id }}

      - uses: actions/upload-artifact@v3
        with:
          name: ansible_output_${{matrix.architecture}}
          path: ansible_output.tar
    
      - name: Build matrix_gen
        working-directory: ./matrix_gen
        env:
          GOPATH: /root/go
          GOCACHE: /root/.cache/go-build
        run: |
          go build .
        
      - name: Generate new matrix
        working-directory: ./matrix_gen
        run: |
          ./matrix_gen --root-folder ~/ansible_output_${{ github.run_id }}
        
      - uses: actions/upload-artifact@v3
        with:
          name: matrix_${{matrix.architecture}}
          path: ./matrix_gen/matrix.md
          
      - name: Cleanup
        if: always()
        run: |
          ansible-playbook clean-up.yml --extra-vars "run_id=id-${{ github.run_id }} output_dir=~/ansible_output_${{ github.run_id }}" || :
      
      
